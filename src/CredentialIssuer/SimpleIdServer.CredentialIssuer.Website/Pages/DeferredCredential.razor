@page "/deferredcreds/{id}"
@inject IState<DeferredCredentialState> deferredCredentialsState
@inject IDispatcher dispatcher
@inject NotificationService notificationService
@inject NavigationManager navigationManager
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@using SimpleIdServer.CredentialIssuer.Domains;
@using SimpleIdServer.CredentialIssuer.Website.Stores.CredentialIssuer;
@using SimpleIdServer.CredentialIssuer.Website.Shared;
@using System.Globalization;

<RadzenBreadCrumb>
    <RadzenBreadCrumbItem Path="/deferredcreds" Text="@Global.DeferredCredentialsTitle" />
    <RadzenBreadCrumbItem Text="@Global.DeferredCredentialTitle" />
</RadzenBreadCrumb>

<RadzenCardLoader Variant="Variant.Filled" IsLoading=@deferredCredentialsState.Value.IsLoading>

</RadzenCardLoader>

@code {
    [Parameter]
    public string id { get; set; } = null!;

    RadzenDataGrid<DeferredCredential> deferredCredentialsGrid;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (string.IsNullOrWhiteSpace(id)) return;
        dispatcher.Dispatch(new GetDeferredCredentialAction { Id = id });
    }
}