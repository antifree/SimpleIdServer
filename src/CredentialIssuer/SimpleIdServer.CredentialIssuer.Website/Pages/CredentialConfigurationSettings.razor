@using SimpleIdServer.CredentialIssuer.Domains;

<RadzenStack Gap="1rem">
    <!-- Type -->
    <RadzenFormField Text="@Global.Type" Variant=Variant.Outlined>
        <ChildContent>
            <RadzenTextBox @bind-Value="@Form.Type"></RadzenTextBox>
        </ChildContent>
        <Helper>
            <RadzenText TextStyle="TextStyle.Caption">@Global.TypeHelper</RadzenText>
        </Helper>
    </RadzenFormField>
    <!-- Format -->
    <RadzenFormField Text="@Global.Format" Variant=Variant.Outlined>
        <ChildContent>
            <RadzenDropDown @bind-Value="@Form.Format"
                            Disabled=true
                            Data="@SupportedFormats"/>
        </ChildContent>
        <Helper>
            <RadzenText TextStyle="TextStyle.Caption">@Global.CredentialConfigurationFormatHelper</RadzenText>
        </Helper>
    </RadzenFormField>
    <!-- Scope -->
    <RadzenFormField Text="@Global.Scope" Variant=Variant.Outlined>
        <ChildContent>
            <RadzenTextBox @bind-Value="@Form.Scope"></RadzenTextBox>
        </ChildContent>
        <Helper>
            <RadzenText TextStyle="TextStyle.Caption">@Global.CredentialConfigurationScopeHelper</RadzenText>
        </Helper>
    </RadzenFormField>
    <!-- Json Ld Context -->
    <RadzenFormField Text="@Global.JsonLdContext" Variant=Variant.Outlined>
        <ChildContent>
            <RadzenTextBox @bind-Value="@Form.JsonLdContext"></RadzenTextBox>
        </ChildContent>
        <Helper>
            <RadzenText TextStyle="TextStyle.Caption">@Global.JsonLdContextDescription</RadzenText>
        </Helper>
    </RadzenFormField>
    <!-- Base url -->
    <RadzenFormField Text="@Global.BaseUrl" Variant=Variant.Outlined>
        <ChildContent>
            <RadzenTextBox @bind-Value="@Form.BaseUrl"></RadzenTextBox>
        </ChildContent>
        <Helper>
            <RadzenText TextStyle="TextStyle.Caption">@Global.BaseUrlDescription</RadzenText>
        </Helper>
    </RadzenFormField>
    <!-- Translations -->
    <div>
        <RadzenButton class="mb-1" Click="@(args => AddDisplay())" Icon="add" Text="@Global.AddCredentialConfigurationDisplay" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Medium"></RadzenButton>
        <div class="row mt-2">
            @foreach(var display in CredentialConfiguration.Displays)
            {
                <CredentialViewer CredentialConfiguration="@CredentialConfiguration" Language="@display.Locale">
                    <ActionsContent>
                        <RadzenButton Click=@((evt) => EditDisplay(display)) Variant="Variant.Text">@Global.Edit</RadzenButton>
                        <RadzenButton Click=@((evt) => Remove(display.Locale)) Variant="Variant.Text">@Global.Delete</RadzenButton>
                    </ActionsContent>
                </CredentialViewer>
            }
        </div>
    </div>
    <div>
        <RadzenButton class="mb-1" Click="@(args => UpdateSettings())" Icon="save" Text="@Global.Save" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Medium"></RadzenButton>
    </div>
</RadzenStack>

@code {
    [Parameter]
    public Domains.CredentialConfiguration CredentialConfiguration { get; set; }
    List<string> SupportedFormats = new List<string>
    {
        "ldp_vc",
        "jwt_vc_json-ld",
        "jwt_vc_json"
    };
    UpdateSettingsForm? Form { get; set; }

    record UpdateSettingsForm
    {
        public string Type { get; set; }
        public string Format { get; set; }
        public string Scope { get; set; }
        public string JsonLdContext { get; set; }
        public string BaseUrl { get; set; }
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (CredentialConfiguration == null) return;
        Form = new UpdateSettingsForm
        {
            Type = CredentialConfiguration.Type,
            Format = CredentialConfiguration.Format,
            Scope = CredentialConfiguration.Scope,
            JsonLdContext = CredentialConfiguration.JsonLdContext,
            BaseUrl = CredentialConfiguration.BaseUrl
        };
    }

    void AddDisplay()
    {

    }

    void EditDisplay(CredentialConfigurationTranslation translation)
    {
        
    }

    void UpdateSettings()
    {

    }

    void Remove(string locale)
    {
        
    }
}