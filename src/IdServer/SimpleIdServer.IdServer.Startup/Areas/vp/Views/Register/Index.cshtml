@using Microsoft.Extensions.Options;
@using SimpleIdServer.IdServer.Options;
@using SimpleIdServer.IdServer.Startup;
@using SimpleIdServer.IdServer.Startup.Resources;
@model SimpleIdServer.IdServer.VerifiablePresentation.UI.ViewModels.VerifiablePresentationRegisterViewModel;
@inject IOptions<IdServerHostOptions> configuration

@{
    ViewBag.Title = RegisterVpResource.title;
    Layout = "~/Views/Shared/_RegisterLayout.cshtml";
    var getQrCodeUrl = Url.Action("GetQRCode", "VpAuthorization", new { area = SimpleIdServer.IdServer.VerifiablePresentation.Constants.AMR });
}

<ul class="list-group mb-3" id="errors">

</ul>

@if(!Model.IsUpdated)
{
    <div class="row">
        @foreach (var verifiablePresentation in Model.VerifiablePresentations)
        {
            <div class="col col-md-6">
                <div class="card">
                    <div class="card-header">@verifiablePresentation.Name</div>
                    <div class="card-body">
                        <ul class="list-group">
                            @foreach(var vcName in verifiablePresentation.VcNames)
                            {
                                <li class="list-group-item">@vcName</li>
                            }
                        </ul>
                    </div>
                    <div>
                        <form class="vpRegister" action="#" method="post">
                            <input type="hidden" name="id" value="@verifiablePresentation.Id" />
                            <button type="submit" class="btn btn-primary card-link">@RegisterVpResource.register</button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Qr code -->
    <div id="qrCode" style="display: none; text-align: center;">
        <h3>@AuthenticateMobileResource.scan_mobileapp</h3>
        <img src="#" style="max-width:280px;" />
    </div>
}
else
{
    
}
                            
@section SubScripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var getQrCodeUrl = "@getQrCodeUrl";

            var displayError = function (errorJson) {
                $("#errors").empty();
                $("#errors").append("<li  class='list-group-item list-group-item-danger'>" + errorJson["error_description"] + "</li>");
            }

            var displayQRCode = function (img) {
                $("#qrCode").css("display", "");
                $("#qrCode img").attr("src", img);
            }

            async function displayQrCode(id) {
                let response = await fetch(getQrCodeUrl + "/" + id, {
                    method: 'GET'
                });
                if (!response.ok) {
                    const json = await response.json();
                    displayError(json);
                    return;
                }

                const blob = await response.blob();
                const img = URL.createObjectURL(blob);
                displayQRCode(img, qrCode);
                // check status of the qr code.
            }

            $(".vpRegister").submit(function (evt) {
                evt.preventDefault();
                var id = $(evt.target)
                    .serializeArray()["id"];
                displayQrCode(id);
            });
        });
    </script>
}